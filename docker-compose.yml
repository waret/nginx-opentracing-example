# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '2.4'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    container_name: elasticsearch
    restart: always
    networks:
      trivial_example:
        aliases:
          - elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: "nc -z localhost 9200"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 2m

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.3
    container_name: kibana
    restart: always
    networks:
      trivial_example:
        aliases:
          - kibana
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  oap:
    image: apache/skywalking-oap-server
    container_name: oap
    restart: always
    networks:
      trivial_example:
        aliases:
          - oap
    depends_on:
      elasticsearch:
        condition: service_healthy
    links:
      - elasticsearch
    ports:
      - 11800:11800
      - 12800:12800
    environment:
      SW_STORAGE: elasticsearch
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
      SW_RECEIVER_JAEGER_ENABLED: "true"
    healthcheck:
      test: "nc -z localhost 14250"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 2m

  ui:
    image: apache/skywalking-ui
    container_name: ui
    restart: always
    networks:
      trivial_example:
        aliases:
          - ui
    depends_on:
      - oap
    links:
      - oap
    ports:
      - 8081:8080
    environment:
      SW_OAP_ADDRESS: oap:12800

  jaeger-agent:
    image: jaegertracing/jaeger-agent
    container_name: jaeger-agent
    restart: always
    networks:
      trivial_example:
        aliases:
          - jaeger-agent
    depends_on:
      oap:
        condition: service_healthy
    links:
      - oap
    command:
      #- --reporter.grpc.host-port=jaeger:14250
      - --reporter.grpc.host-port=oap:14250
      - --log-level=debug
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    restart: always
    networks:
      trivial_example:
        aliases:
          - jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      trivial_example:
        aliases:
          - jaeger
    expose:
      - "9411"
      - "16686"
    ports:
      - "9411:9411"
      - "16686:16686"

  nginx:
    image: opentracing/nginx-opentracing
    container_name: nginx
    networks:
      trivial_example:
        aliases:
          - nginx
    depends_on:
      - jaeger-agent
    links:
      - jaeger-agent
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/jaeger-config.json:/etc/jaeger-config.json
    ports:
      - "8080:8080"

  app-service:
    build:
      context: hello-backend
      dockerfile: ./Dockerfile
    container_name: app-service
    networks:
      trivial_example:
        aliases:
          - app-service
    depends_on:
      - jaeger-agent
    links:
      - jaeger-agent
    ports:
      - "9001:9001"
    command: 
      - /app/server
      - -collector_host
      - jaeger-agent
      - -collector_port
      - "6831"

networks:
  trivial_example: {}
